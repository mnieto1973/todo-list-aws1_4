pipeline {
        agent { label 'default' }
environment {
        STACK_NAME = 'todo-list-aws-1-4-production'
         GIT_CREDENTIALS_ID = 'gitunir' // ID de las credenciales de Git configuradas en Jenkins
          CONFIG_REPO_URL = 'https://raw.githubusercontent.com/mnieto1973/todo-list-aws1_4_config/production/samconfig.toml'
    }
    stages {
        stage('Get Code') {
            steps {
                git branch: 'master', url: 'https://github.com/mnieto1973/todo-list-aws1_4.git'
                 // Descargar el archivo de configuraciÃ³n samconfig.toml desde la rama 'production'
                sh 'curl -o samconfig-production.toml ${CONFIG_REPO_URL}'
            }
        }
        stage('Static Test') {
            steps {
                sh 'flake8 src/ > flake8-report.txt'
                sh 'bandit -r src/ > bandit-report.txt'
                archiveArtifacts artifacts: '**/*-report.txt', allowEmptyArchive: true
            }
        }
        stage('Deploy') {
            steps {
                sh 'sam build'
                 sh 'sam deploy --config-env production --config-file samconfig-production.toml  --capabilities CAPABILITY_NAMED_IAM --no-fail-on-empty-changeset'
            }
        }
        stage('Get Stack URL') {
            steps {
                script {
                    def url = sh(script: "aws cloudformation describe-stacks --stack-name ${STACK_NAME} --query \"Stacks[0].Outputs[?OutputKey=='BaseUrlApi'].OutputValue\" --output text", returnStdout: true).trim()
                    env.BASE_URL = url
                    echo "Stack URL: ${BASE_URL}"
                }
            }
        }
         stage('Test') {
           steps {
                script {
                    sh "export BASE_URL=${BASE_URL}"
                    sh 'pytest -m testProduccion --junitxml=result.rest.xml   test/integration/todoApiTest.py'
                }
                junit 'result*.xml'
            }
        }
        
    }
     post {
        cleanup {
            // Limpiar las credenciales guardadas en ~/.git-credentials
            sh 'rm -f ~/.git-credentials'
        }
    }
}